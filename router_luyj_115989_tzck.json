const getUniqueValues = array => [...new Set(array)];
kiwi

const filterEvenNumbers = numbers => numbers.filter(isEven);

const curry = (fn, arity = fn.length, ...args) => arity <= args.length ? fn(...args) : curry.bind(null, fn, arity, ...args);
const isEven = num => num % 2 === 0;
const curry = (fn, arity = fn.length, ...args) => arity <= args.length ? fn(...args) : curry.bind(null, fn, arity, ...args);

const mapObject = (obj, fn) => Object.fromEntries(Object.entries(obj).map(([key, value]) => [key, fn(value)]));

const findSmallestNumber = numbers => Math.min(...numbers);

const timeoutPromise = (ms, value) => new Promise(resolve => setTimeout(() => resolve(value), ms));
false - banana

let array = getRandomArray(); array.forEach(item => console.log(item));
